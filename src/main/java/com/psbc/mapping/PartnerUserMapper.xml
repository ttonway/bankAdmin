<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.psbc.dao.PartnerUserMapper">
    <resultMap id="BaseResultMap" type="com.psbc.pojo.PartnerUser">
        <id column="partnerId" property="partnerId" jdbcType="BIGINT"/>
        <result column="partnerType" property="partnerType" jdbcType="VARCHAR"/>
        <result column="oldCustomer" property="oldCustomer" jdbcType="VARCHAR"/>
        <result column="workUnitType" property="workUnitType" jdbcType="VARCHAR"/>
        <result column="workUnitName" property="workUnitName" jdbcType="VARCHAR"/>
        <result column="userName" property="userName" jdbcType="VARCHAR"/>
        <result column="phoneNumber" property="phoneNumber" jdbcType="VARCHAR"/>
        <result column="shopName" property="shopName" jdbcType="VARCHAR"/>
        <result column="shopAddress" property="shopAddress" jdbcType="VARCHAR"/>
        <result column="bank" property="bank" jdbcType="VARCHAR"/>
        <result column="posterType" property="posterType" jdbcType="VARCHAR"/>
        <result column="posterFileName" property="posterFileName" jdbcType="VARCHAR"/>
        <result column="needMaterial" property="needMaterial" jdbcType="VARCHAR"/>
        <result column="materials" property="materials" jdbcType="VARCHAR"/>
        <result column="receiver" property="receiver" jdbcType="VARCHAR"/>
        <result column="receiverPhoneNumber" property="receiverPhoneNumber" jdbcType="VARCHAR"/>
        <result column="receiverArea" property="receiverArea" jdbcType="VARCHAR"/>
        <result column="receiverAddress" property="receiverAddress" jdbcType="VARCHAR"/>
        <result column="posterType" property="posterType" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="VARCHAR"/>
        <result column="createTime" property="createTime" jdbcType="VARCHAR"/>
        <result column="updateTime" property="updateTime" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    partnerId, partnerType, oldCustomer, workUnitType, workUnitName, userName, phoneNumber, shopName, shopAddress, bank,
    posterType, posterFileName, needMaterial, materials, receiver, receiverPhoneNumber, receiverArea, receiverAddress, createTime, updateTime
    </sql>


    <select id="selectByList" resultMap="BaseResultMap" parameterType="java.util.HashMap">
    select t.*
    from partner_user t
    where 1=1
    <if test="bank != null">
        and t.bank = #{bank,jdbcType=VARCHAR}
    </if>
    <if test="status != null">
        and t.status = #{status,jdbcType=VARCHAR}
    </if>
    order by createTime desc
    <if test="start != null and length != null">
        limit #{start,jdbcType=BIGINT},#{length,jdbcType=BIGINT}
    </if>
    </select>

    <select id="selectByCnt" resultType="java.lang.Integer">
    select count(t.partnerId) cnt
    from partner_user t
    where 1=1
    <if test="bank != null">
        and t.bank = #{bank,jdbcType=VARCHAR}
    </if>
    <if test="status != null">
        and t.status = #{status,jdbcType=VARCHAR}
    </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from partner_user
        where partnerId = #{partnerId,jdbcType=BIGINT}
    </select>

    <select id="selectByPhoneNumber" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from partner_user
        where phoneNumber = #{phoneNumber,jdbcType=BIGINT}
    </select>

    <delete id="deleteByPrimaryKey">
        delete from partner_user
        where partnerId in
        <foreach collection="array" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>

    <insert id="insert" parameterType="com.psbc.pojo.PartnerUser"
            useGeneratedKeys="true" keyProperty="partnerId">
    insert into partner_user (partnerType, oldCustomer, workUnitType, workUnitName, userName, phoneNumber, shopName, shopAddress, bank, posterType, posterFileName,
    needMaterial, materials, receiver, receiverPhoneNumber, receiverArea, receiverAddress,
    createTime, updateTime)
    values (#{partnerType,jdbcType=VARCHAR}, #{oldCustomer,jdbcType=VARCHAR}, #{workUnitType,jdbcType=VARCHAR}, #{workUnitName,jdbcType=VARCHAR},
      #{userName,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, #{shopName,jdbcType=VARCHAR}, #{shopAddress,jdbcType=VARCHAR}, #{bank,jdbcType=VARCHAR},
      #{posterType,jdbcType=VARCHAR}, #{posterFileName,jdbcType=VARCHAR},
      #{needMaterial,jdbcType=VARCHAR}, #{materials,jdbcType=VARCHAR},
      #{receiver,jdbcType=VARCHAR}, #{receiverPhoneNumber,jdbcType=VARCHAR}, #{receiverArea,jdbcType=VARCHAR}, #{receiverAddress,jdbcType=VARCHAR},
      #{createTime,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR}
      )
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.psbc.pojo.PartnerUser">
        update partner_user
        set partnerType = #{partnerType,jdbcType=VARCHAR},
        oldCustomer = #{oldCustomer,jdbcType=VARCHAR},
        workUnitType = #{workUnitType,jdbcType=VARCHAR},
        workUnitName = #{workUnitName,jdbcType=VARCHAR},
        userName = #{userName,jdbcType=VARCHAR},
        phoneNumber = #{phoneNumber,jdbcType=VARCHAR},
        shopName = #{shopName,jdbcType=VARCHAR},
        shopAddress = #{shopAddress,jdbcType=VARCHAR},
        bank = #{bank,jdbcType=VARCHAR},
        posterType = #{posterType,jdbcType=VARCHAR},
        posterFileName = #{posterFileName,jdbcType=VARCHAR},
        needMaterial = #{needMaterial,jdbcType=VARCHAR},
        materials = #{materials,jdbcType=VARCHAR},
        receiver = #{receiver,jdbcType=VARCHAR},
        receiverPhoneNumber = #{receiverPhoneNumber,jdbcType=VARCHAR},
        receiverArea = #{receiverArea,jdbcType=VARCHAR},
        receiverAddress = #{receiverAddress,jdbcType=VARCHAR},
        updateTime = #{updateTime,jdbcType=VARCHAR}
        where partnerId = #{partnerId,jdbcType=BIGINT}
    </update>

</mapper>